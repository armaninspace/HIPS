.TH XVANIM 1 "May 8, 1992"
.SH NAME
xvanim - XView-based HIPS-format image animator and browser
.SH SYNOPSIS
.ta .7i
.B xvanim
[-s pixelsize] [-f | -r | -c mapfile |
.br
	-g gammar gammag gammab | -sg gammar gammag gammab]
.br
	[-C] [-S viewrows [viewcols]]
.SH DESCRIPTION 
.I Xvanim
allows the user to browse a series of HIPS image sequence files, displaying
their contents on a Sun console.  It can display either
8-bit-per-pixel byte formatted images, or 1-bit-per-pixel
bit-packed images (i.e. as generated by
.IR bpack (1)).
The 
.I -s
switch 
enlarges the input frame by pixel replication horizontally and vertically
by a factor of
.IR pixelsize .
.PP
For 8-bit images displayed on 1-bit displays the image is halftoned.
For 8-bit images displayed on color systems, the program allows some control
over the use of colormaps.
By default, on an 8-or-more-bit console, this program uses 64 slots in
the colormap for gray-scale.  This 64-color mode lets the tool coexist
more peacefully with other color-piggish applications.  The low 2 bits
in the 8-bit gray value are ignored.  For most images, and given some
poor monitor performance, one can barely tell the difference.  If
multiple copies of the tool are running, they do not use the same 64
entries, so after the main colormap is filled up (after 3 invocations
or so), color flashing will occur.
This behavior can be forced by specifying
.I -r
(i.e. to ignore a colormap stored with the image itself).
If you want a full 256 color map with a ramp color lookup table, specify
.IR -f .
If the image
has its own colormap (in header parameter
.IR cmap ),
and if
.IR -r ,
.IR -g ,
.IR -sg ,
.I -f
and
.I -c
are not specified, it will be used.  Finally, the user may provide a color map
with
.IR -c,
.I -g
or
.IR -sg .
The switch
.I -c
is used to input a color map from a file which is formatted as follows:
.sp
.nf
.in +1i
.ta .4i
#-of-entries
r(0) g(0) b(0)
r(1) g(1) b(1)
	.
	.
	.
r(n-1) g(n-1) b(n-1)
.in -1i
.fi
.sp
The image should not contain any pixel values greater than or equal to
.IR n .
.I -g
generates an inverse gamma correction lookup table where
.I gammar
defaults to 2,
.I gammag
defaults to
.I gammar
and
.I gammab
defaults to
.IR gammag .
.I -sg
is like
.I -g
except that only the 6 most-significant bits of each pixel are used,
and only 64 colormap entries are required as for
.IR -r .
The tool allows some of these colormap manipulations to be performed after the
tool is
run, as well.  The user may load a new colormap file, switch between use of
that file, use of the inverse-gamma table, use of a linear ramp, or use of a
colormap stored in the image header.
There are sliders for the three gamma values.
The tool also indicates the
number of greylevels currently required for the last loaded image.
.PP
For the full
256-color colormaps (specified with
.IR -f ,
.IR -g ,
.IR -c ,
or a colormap stored in a header when
.I -r
and
.I -sg
aren't specified), the default behavior is to use the full colormap
unaltered.  This results in the scrollbars and window frame having the
appearance governed by that colormap even when the cursor is over the
scrollbars (often causing them to disappear).  If the user specifies
.IR -C ,
then the control colors (needed for the scrollbars and window frame) are
altered to be identical to those required for the scrollbars.  Any pixels
in the displayed image with those values are replaced with values which
result in a displayed color which is as close as possible to the desired
color.  Afterward, if the
user changes the colormap using the window buttons, these substituted
pixels will continue to result in the same display colors as indicated
by the previously-made pixel substitution which occurred when the image
was initially loaded.
.PP
Thus, there are three possible color modes:  64-colors, 256-colors, and
256-colors with console colors substituted in.  The mode is specified when the
tool is run by a combination of the switches specified by the user and whether
or not the header of the first input image has a colormap.  Once the color
usage mode is specified, it remains fixed throughout a single invocation of
.IR xvanim .
In any of these modes the program is able to display binary images as well.
.PP
The window defaults to be just large enough to contain the entire
image.  The image may be resized by the user in the usual way.  The user
may also specify that the window be of a different size with the
.I -S
flag.
This specifies the amount of the image that will fit in the initially
displayed canvas (and number of columns defaults to be the same as the
number of rows).
In order to avoid an XView bug, any time
the image is resized, the scrollbars are reset to be at the top-left
corner of the image.  Note:  the scrollbars are splittable, allowing
multiple views of the image.
.PP
For multiple frame sequences, the sequence is animated.  Several sliders and
buttons allow the user to control the animation speed, direction, etc.  Note
that the speed indications are only approximate, and that large 8-bit image
sequences will almost certainly run slower, as will anything else on a heavily
loaded system.
.SH STANDARD SWITCHES USED
.TP 1.3i
.I "-UL zerolevel"
Specify greylevel substituted for zero bits when unpacking. Default: 0.
.TP 1.3i
.I "-UH onelevel"
Specify greylevel substituted for one bits when unpacking. Default: 255.
.TP 1.3i
.I "-CR [M | P | R | I]"
Complex-to-real conversion: magnitude, phase, real part or imaginary part.
Default: M.
.TP 1.3i
.I -U
Print usage message.
.SH AUTHOR
Written by Mike Landy, 6/88
.br
based on sunv, originally written by Pat Flynn, 1/88
.br
HIPS 2 - msl - 1/16/91
.br
converted to XView - msl - 4/26/92
