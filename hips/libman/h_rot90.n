.TH H_ROT90 3 "1/18/91" "Version 2" "HIPS Manual"
.SH NAME
h_rot90 \- subroutines to rotate an image by 90 degrees
.SH SYNOPSIS
.nf
#include <hipl_format.h>

h_rot90(hdi,hdo,dirflag)
h_rot90_b(hdi,hdo,dirflag)
h_rot90_i(hdi,hdo,dirflag)
h_rot90_f(hdi,hdo,dirflag)
struct header *hdi,*hdo;
h_boolean dirflag;

h_rot90_B(imagei,imageo,nr,nc,nlpi,nlpo,dirflag)
byte *imagei,*imageo;
int nr,nc,nlpi,nlpo;
h_boolean dirflag;

h_rot90_I(imagei,imageo,nr,nc,nlpi,nlpo,dirflag)
int *imagei,*imageo;
int nr,nc,nlpi,nlpo;
h_boolean dirflag;

h_rot90_F(imagei,imageo,nr,nc,nlpi,nlpo,dirflag)
float *imagei,*imageo;
int nr,nc,nlpi,nlpo;
h_boolean dirflag;
.fi
.SH DESCRIPTION 
These routines take a subimage of an input image (specified by
.I hdi
or
.IR imagei ),
rotate it by 90 degrees and store the result in the output subimage (specified
by
.I hdo
or
.IR imageo ).
.I h_rot90
calls
.IR h_rot90_b ,
.I h_rot90_i
or
.I h_rot90_f
depending upon whether the pixel format is byte, integer or float.
.IR h_rot90_B ,
.I h_rot90_I
and
.I h_rot90_F
are the low-level routines which don't require an image header.  The subimage
size is
.I nr
by
.IR nc .
The input image has
.I nlpi
pixels per line, and the output image has
.I nlpo
pixels per line.
If
.I dirflag
is TRUE then the image is rotated counterclockwise, else clockwise.
.SH "PIXEL FORMATS HANDLED DIRECTLY"
byte, integer, float
.SH "REGION-OF-INTEREST"
Only the region-of-interest is processed.  The size of the region-of-interest
is taken from
.IR hdi .
.SH "IN-PLACE PROCESSING"
The image may not be processed in place.  In other words
.I hdi
can not be the same as
.I hdo
and
.I imagei
can not be the same as
.IR imageo .
.SH FILES
/usr/local/lib/libhipsh.a
.SH ERRORS
HE_FMTSUBR - can't handle this pixel format
.SH "SEE ALSO"
h_rot180(3)
.SH AUTHOR
Michael Landy - 1/11/91
