.TH H_RLETOB 3 "8/15/94" "Version 2" "HIPS Manual"
.SH NAME
h_rletob \- subroutines to convert from run-length encoding to byte format
.SH SYNOPSIS
.nf
#include <hipl_format.h>

h_rletob(hdi,hdo,storelen)
struct header *hdi,*hdo;
int storelen;

h_rletoB(imagei,imageo,nr,nc,nlpo,storelen)
byte *imagei,*imageo;
int nr,nc,nlpo,storelen;
.fi
.SH DESCRIPTION 
These routines uncompress a run-length encoded image (specified by
.I hdi
or
.IR imagei ),
and store the result in the output subimage (specified by
.I hdo
or
.IR imageo ).
.I h_rletob
calls
.I h_rletoB ,
which is the low-level routine which doesn't require an image header.
The subimage size is
.I nr
by
.IR nc .
The output image has
.I nlpo
pixels per line.  The number of encoded bytes in the input buffer is supplied in
.IR storelen .
The RLE format encodes each image row separately.  Runs are encoded as three
bytes:  <255><length><byte-value>.  Bytes which are not in a run other
than <255> are encoded as themselves.  <255>'s are encoded as a pair of
<255>'s.  Thus, a run of two <255>'s will be coded as a run, but the run
length must be at least 4 to bother coding any other value.  The length
byte is the run-length minus 2 for runs of <255> and the run-length minus 4
for runs of any other value.  The largest value of <length> allowed is 254.
.SH "PIXEL FORMATS HANDLED DIRECTLY"
RLE
.SH "REGION-OF-INTEREST"
The input region-of-interest is irrelevant.  The result is stored in the
output region-of-interest, whose size is taken from
.IR hdo .
.SH "IN-PLACE PROCESSING"
The image may not be processed in place.  In other words
.I hdi
can not be the same as
.I hdo
and
.I imagei
can not be the same as
.IR imageo .
.SH FILES
/usr/local/lib/libhipsh.a
.SH ERRORS
HE_SHORTBUF - RLE buffer terminated early
.br
HE_SHORTOBUF - output buffer has too few columns for these RLE data
.SH "SEE ALSO"
btorle(1), rle(1), rle_r(1), rletob(1), htorle(1), h_btorle(3)
.SH AUTHOR
Michael Landy - 8/15/94
